/**
개발자 원두는 어느 날부턴가 회사의 직원 외의 인물이 회사 내부 네트워크망에

접속하는 것 같은 의심이 들기 시작했습니다.

회사의 내부 네트워크망은 회사의 IP 주소로만 접속이 가능해야 하므로

원두는 네트워크망에 로그인하는 회원의 IP 주소를 수집하여

외부 스파이의 접속을 차단하고자 합니다.

네트워크망에 접속한 회원의 IP 주소가 담긴 배열 **userList**와,

접속 가능한 회사 IP 주소 **ip**가 매개변수로 주어졌을 때,

허용되지 않는 IP 주소로 접속한 회원의 IP 주소를 나열한 배열을 

return 하는 함수 solution을 완성하세요.

**제한 사항**

- userList는 길이 1 이상 10 이하인 배열입니다.
- userList의 각 요소는 길이가 8인 문자열입니다.
- ip는 길이가 8인 문자열입니다.
- **filter를 이용해서 문제를 풀어야 합니다.**
- 의심되는 사람이 없다면 빈 배열을 return 해야 합니다.
 */

function solution(userList, ip) {
  const ip체크 = userList.filter((res) => res !== ip);
  return ip체크;
}

console.log(
  solution(
    ["123.123.02", "123.123.02", "432.223.07", "123.173.08"],
    "123.123.02"
  )
); // ["432.223.07", "123.173.08"]

console.log(solution(["228.093.22", "228.093.22", "228.093.22"], "228.093.22")); // []
