/**
개발자 원두는 워크샵에 다녀올 팀을 뽑으려 합니다.

특이한 방식을 좋아하는 회사 대표는 원두에게

팀을 만들어서 인원이 홀수가 되는 팀을 데려가겠다고 합니다.

사람들은 팀 번호 1부터 5까지 적힌 종이를 뽑게 되며,

사람들이 뽑은 숫자가 배열에 담기게 됩니다.

예를 들어 첫 번째 사람이 2를 뽑고 두 번째 사람이 5를 뽑고 세 번째 사람이 5를 뽑은 경우,

[2, 5, 5]의 배열이 주어지게 되며 이 안에서 2는 한 명, 5는 두 명이 나왔기 때문에

2를 뽑은 팀이 워크샵에 당첨됩니다.

사람들이 뽑은 숫자를 담은 배열 **arr**가 주어질 때,

워크샵에 가게 되는 팀의 숫자를 return 하는 함수 solution을 완성하세요.

**제한 사항**

- 배열 arr의 길이는 20을 넘지 않습니다.
- 배열 arr의 요소는 1 이상 5 이하의 number입니다.
- 홀수인 팀이 중복되는 경우는 없습니다.
 */

function solution(arr) {
  // 1.{팀번호:인원수}
  const team = {};
  arr.map((팀번호) => {
    if (team[팀번호] === undefined) team[팀번호] = 1;
    else team[팀번호] = team[팀번호] + 1;
  });

  // 2. 홀수인 인원
  const 인원수배열 = Object.values(team);
  const 홀수 = 인원수배열.find((인원수) => 인원수 % 2 === 1);

  // 3.팀번호
  const 팀번호배열 = Object.keys(team);
  const 홀수인팀번호 = 팀번호배열.find((팀번호) => team[팀번호] === 홀수);

  return Number(홀수인팀번호);
}

console.log(solution([1, 2, 2, 1, 1])); // 1
console.log(solution([5, 1, 2, 2, 5, 3, 3, 1, 5])); // 5
console.log(solution([2, 4, 3, 3, 2, 4, 1])); // 1
